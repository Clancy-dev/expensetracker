// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  fullName  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions Transaction[]
  categories   Category[]
  budgetItems  BudgetItem[]
}

model Transaction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  description String
  date        DateTime
  time        String?
  type        String   // "income" or "expense"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  type      String   // "income" or "expense"
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId       String        @db.ObjectId
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
}

model BudgetItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  amount    Float
  priority  String   // "most-crucial" or "less-crucial"
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

